kind: Template
apiVersion: template.openshift.io/v1
description: A build config template that can be used to produce a GeoServer imagestream, from a specified Dockerfile.
metadata:
  labels:
    build: biohub-platform-geoserver
  name: biohub-platform-geoserver
parameters:
  - name: NAME
    description: The name assigned to all of the resources.
    required: true
    value: biohub-platform-geoserver
  - name: SUFFIX
    description: A name suffix used for all objects
    required: false
    value: '-dev'
  - name: TARGET_IMAGE_VERSION
    description: Target image tag
    required: true
    value: '1.0'
  - name: GIT_REPO_URL
    description: The git repo containing the Dockerfile for this build.
    required: true
    value: https://github.com/bcgov/biohubbc-platform.git
  - name: GIT_REF
    description: The specific repo reference (eg. dev, 1.0.0, <commit sha>)
    required: true
    value: dev
  - name: SOURCE_CONTEXT_DIR
    description: The repository path to the Dockerfile.
    required: true
    value: geoserver/biohub-geoserver
  - name: DOCKERFILE_PATH
    description: The path to the docker file (note. this is relative to the SOURCE_CONTEXT_DIR).
    required: true
    value: Dockerfile
  - name: CPU_LIMIT
    description: The resources CPU limit (in cores) for this build; 0 = use default.
    required: true
    value: '0'
  - name: MEMORY_LIMIT
    description: The resources Memory limit (in Mi, Gi, etc) for this build; 0Mi = use default.
    required: true
    value: 0Mi
  - name: CPU_REQUEST
    description: The resources CPU request (in cores) for this build; 0 = use default.
    required: true
    value: '0'
  - name: MEMORY_REQUEST
    description: The resources Memory request (in Mi, Gi, etc) for this build; 0Mi = use default.
    required: true
    value: 0Mi
objects:
  - kind: ImageStream
    apiVersion: image.openshift.io/v1
    metadata:
      name: ${NAME}
      labels:
        shared: 'true'
  - kind: BuildConfig
    apiVersion: build.openshift.io/v1
    metadata:
      name: '${NAME}${SUFFIX}'
      creationTimestamp:
      labels: {}
      annotations: {}
    spec:
      source:
        type: Git
        git:
          uri: ${GIT_REPO_URL}
          ref: ${GIT_REF}
        contextDir: ${SOURCE_CONTEXT_DIR}
      strategy:
        type: Docker
        dockerStrategy:
          dockerfilePath: '${DOCKERFILE_PATH}'
      output:
        to:
          kind: ImageStreamTag
          name: '${NAME}:${TARGET_IMAGE_VERSION}'
      triggers:
        - type: ConfigChange
        - type: ImageChange
      resources:
        requests:
          cpu: ${CPU_REQUEST}
          memory: ${MEMORY_REQUEST}
        limits:
          cpu: ${CPU_LIMIT}
          memory: ${MEMORY_LIMIT}
      runPolicy: SerialLatestOnly
      failedBuildsHistoryLimit: 5
