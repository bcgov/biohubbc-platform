apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: geoserver-persistent-template
metadata:
  name: biohub-platform-geoserver-dc
parameters:
  - name: NAME
    description: The name of the OpenShift Service exposed for geoserver .
    required: true
    value: 'biohub-platform-geoserver'
  - name: SUFFIX
    required: true
    value: '-dev'
  - name: HOST
    description: Host name of the application
    required: true
  - name: IMAGE_STREAM_NAME
    description: The ImageStream name.
    required: true
    value: 'biohub-platform-geoserver'
  - name: IMAGE_STREAM_VERSION
    description: Version of GeoServer image to be used (eg. 2.21.1 or latest).
    required: true
  # - name: IMAGE_STREAM_NAMESPACE
  #   description: The OpenShift Namespace where the ImageStream resides.
  #   required: true
  #   value: 'a0ec71-tools'
  # - name: GEOSERVER_SECRETS_NAME
  #   description: The OpenShift secret that contains sensitive geoserver values.
  #   required: true
  - name: VOLUME_CAPACITY
    description: Volume space available for data, e.g. 512Mi, 2Gi.
    required: true
  - name: PORT_DEFAULT
    value: '8080'
  - name: PORT_DEFAULT_NAME
    description: Default port name
    value: '8080-tcp'
  - name: CPU_REQUEST
    value: '10m'
  - name: CPU_LIMIT
    value: '200m'
  - name: MEMORY_REQUEST
    value: '512Mi'
  - name: MEMORY_LIMIT
    value: '2Gi'
  - name: REPLICAS
    value: '1'
objects:
  - kind: Service
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
    spec:
      ports:
        - name: ${NAME}-${PORT_DEFAULT_NAME}
          protocol: TCP
          port: ${{PORT_DEFAULT}}
          targetPort: ${{PORT_DEFAULT}}
      sessionAffinity: None
      selector:
        deploymentConfig: ${NAME}${SUFFIX}
      type: ClusterIP

  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: '${NAME}${SUFFIX}'
      role: geoserver
    spec:
      accessModes:
        - ReadWriteMany
      resources:
        requests:
          storage: '${VOLUME_CAPACITY}'

  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: '${IMAGE_STREAM_NAME}'
      creationTimestamp:
      labels:
        shared: 'true'
      annotations: {}
      role: geoserver
    spec:
      lookupPolicy:
        local: false

  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      annotations:
        template.alpha.openshift.io/wait-for-ready: 'true'
      name: '${NAME}${SUFFIX}'
      role: geoserver
    spec:
      replicas: '${{REPLICAS}}'
      revisionHistoryLimit: 10
      selector:
        deploymentConfig: ${NAME}${SUFFIX}
      strategy:
        activeDeadlineSeconds: 21600
        recreateParams:
          timeoutSeconds: 600
        resources:
          limits:
            cpu: ${CPU_LIMIT}
            memory: ${MEMORY_LIMIT}
          requests:
            cpu: ${CPU_REQUEST}
            memory: ${MEMORY_REQUEST}
        type: Rolling
      template:
        metadata:
          annotations: null
          creationTimestamp: null
          labels:
            deploymentConfig: '${NAME}${SUFFIX}'
            name: '${NAME}${SUFFIX}'
            role: geoserver
        spec:
          containers:
            - capabilities: {}
              image: ' '
              imagePullPolicy: Always
              name: geoserver
              ports:
                - containerPort: ${{PORT_DEFAULT}}
                  protocol: TCP
              resources:
                requests:
                  cpu: '${CPU_REQUEST}'
                  memory: '${MEMORY_REQUEST}'
                limits:
                  cpu: '${CPU_LIMIT}'
                  memory: '${MEMORY_LIMIT}'
              securityContext: {}
              terminationMessagePath: '/dev/termination-log'
              volumeMounts:
                - mountPath: '/usr/share/geoserver/data_dir'
                  name: '${NAME}${SUFFIX}-data'
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          volumes:
            - name: '${NAME}${SUFFIX}-data'
              persistentVolumeClaim:
                claimName: '${NAME}${SUFFIX}'
      triggers:
        - imageChangeParams:
            automatic: true
            containerNames:
              - geoserver
            from:
              kind: ImageStreamTag
              name: '${IMAGE_STREAM_NAME}:${IMAGE_STREAM_VERSION}'
          type: ImageChange
        - type: ConfigChange
    status:
      availableReplicas: 0
      latestVersion: 0
      observedGeneration: 0
      replicas: 0
      unavailableReplicas: 0
      updatedReplicas: 0

  - kind: Route
    apiVersion: route.openshift.io/v1
    metadata:
      annotations: {}
      creationTimestamp: null
      labels: {}
      name: ${NAME}${SUFFIX}
    spec:
      host: ${HOST}
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: ${NAME}${SUFFIX}
        weight: 100
      port:
        targetPort: ${NAME}-${PORT_DEFAULT_NAME}
      wildcardPolicy: None
